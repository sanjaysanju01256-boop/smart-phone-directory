import { initializeApp } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-app.js";
import { getDatabase, ref, push, set, onValue, remove } from "https://www.gstatic.com/firebasejs/12.4.0/firebase-database.js";

// Firebase Config
const firebaseConfig = {
    apiKey: "YOUR_API_KEY",
    authDomain: "YOUR_PROJECT.firebaseapp.com",
    databaseURL: "https://YOUR_PROJECT-default-rtdb.firebaseio.com",
    projectId: "YOUR_PROJECT",
    storageBucket: "YOUR_PROJECT.appspot.com",
    messagingSenderId: "YOUR_SENDER_ID",
    appId: "YOUR_APP_ID"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getDatabase(app);

// DOM Elements
const contactForm = document.getElementById('contactForm');
const contactName = document.getElementById('contactName');
const contactPhone = document.getElementById('contactPhone');
const contactsList = document.getElementById('contactsList');
const searchInput = document.getElementById('searchInput');
const clearSearch = document.getElementById('clearSearch');
const noContacts = document.getElementById('noContacts');

const EXPIRY_DAYS = 20;
let contacts = [];

// Display Contacts
function displayContacts(list) {
    contactsList.innerHTML = '';
    if (list.length === 0) {
        noContacts.style.display = 'block';
        return;
    } else {
        noContacts.style.display = 'none';
    }

    list.forEach(c => {
        const div = document.createElement('div');
        div.className = 'contact-item';
        div.innerHTML = `<span>${c.name}</span><span>${c.phone}</span><button class="delete-btn" data-key="${c.key}">Delete</button>`;
        contactsList.appendChild(div);
    });

    document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', e => remove(ref(db, 'contacts/' + e.target.dataset.key)));
    });
}

// Search Contacts
function searchContacts() {
    const query = searchInput.value.toLowerCase();
    displayContacts(contacts.filter(c => c.name.toLowerCase().includes(query) || c.phone.includes(query)));
}

// Add Contact
contactForm.addEventListener('submit', e => {
    e.preventDefault();
    const name = contactName.value.trim();
    const phone = contactPhone.value.trim();
    if (!name || !phone) return;

    const newContactRef = push(ref(db, 'contacts'));
    set(newContactRef, { name, phone, added: new Date().toISOString() });
    contactForm.reset();
});

// Firebase Listener
onValue(ref(db, 'contacts'), snapshot => {
    contacts = [];
    snapshot.forEach(child => {
        const data = child.val();
        const key = child.key;
        const added = new Date(data.added);
        if ((new Date() - added) / (1000*60*60*24) <= EXPIRY_DAYS) contacts.push({ ...data, key });
        else remove(ref(db, 'contacts/' + key));
    });
    searchContacts();
});

// Search & Clear Events
searchInput.addEventListener('input', searchContacts);
clearSearch.addEventListener('click', () => { searchInput.value = ''; displayContacts(contacts); });
document.addEventListener('keydown', e => {
    if (e.ctrlKey && e.key.toLowerCase() === 'k') { e.preventDefault(); searchInput.focus(); }
    if (e.key === 'Escape') { searchInput.value = ''; displayContacts(contacts); }
});
